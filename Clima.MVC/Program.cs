using Clima.Infrastructure.Persistence;
using Microsoft.EntityFrameworkCore;

var builder = WebApplication.CreateBuilder(args);

// ðŸ”¹ Garante que o appsettings.json serÃ¡ lido corretamente (boa prÃ¡tica)
builder.Configuration.AddJsonFile("appsettings.json", optional: false, reloadOnChange: true);

// ðŸ”¹ Recupera a connection string
var connectionString = builder.Configuration.GetConnectionString("DefaultConnection");

// ðŸ”¹ ValidaÃ§Ã£o para evitar erro silencioso
if (string.IsNullOrWhiteSpace(connectionString))
{
    throw new InvalidOperationException("Connection string 'DefaultConnection' nÃ£o encontrada.");
}

// ðŸ”¹ Configura o DbContext com Oracle
builder.Services.AddDbContext<AppDbContext>(options =>
    options.UseOracle(connectionString));

// ðŸ”¹ MVC padrÃ£o
builder.Services.AddControllersWithViews();

var app = builder.Build();

if (app.Environment.IsDevelopment())
{
    app.UseDeveloperExceptionPage(); // Exibe detalhes do erro no navegador
}
else
{
    app.UseExceptionHandler("/Home/Error");
    app.UseHsts();
}

app.UseHttpsRedirection();
app.UseStaticFiles();

app.UseRouting();
app.UseAuthorization();

// ðŸ”¹ Rota padrÃ£o
app.MapControllerRoute(
    name: "default",
    pattern: "{controller=Evento}/{action=Index}/{id?}");

app.Run();
